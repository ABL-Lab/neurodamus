/**
 * @file ConfigParser.hoc
 * @brief 
 * @author king
 * @date 2009-06-24
 * @remark Copyright Â© BBP/EPFL 2005-2011; All rights reserved. Do not distribute without further notice.
 */

/**
*
* @file    ShowProgress.hoc 
* @brief   Implements a function which will cause the percentage complete of the simulation to periodically be printed to the console 
*
* @author  Jim King, Rajnish Ranjan, Fabien Delalondre
*
*/

begintemplate ShowProgress

objref fihTimer, cvode, this
public init

external tstop

/**
 * Utility function which will set up a timer to perioducally check the amount of time lapsed
 * in the simulation compared to the final tstop value.  This is converted into a percentage of the job complete
 * which is then printed to the console.
 *
 * @param $o1 Reference to cvode object
 * @param $2 cpu rank, since only cpu id 0 needs to execute anything
 */
proc init() {
    cvode = $o1

    if( $2 == 0 ) {
        lastTimeCheck = startsw()
        fihTimer = new FInitializeHandler("updateProgress()", this)
    }
}

/**
 * Call back function that refreshes the progress value (if enough time has elapsed) and then 
 * inserts the next call into the event queue
 */
proc updateProgress() {
    if((startsw()-lastTimeCheck) > 0.10 ) {
        printf(" Completed =%d\%\r",  (t*100/tstop))
        lastTimeCheck = startsw()
    }
    
    cvode.event(t+1, "updateProgress()")
}

endtemplate ShowProgress
